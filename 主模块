--以下0812只是命名，没有特殊含义，要注意命名要和模快文件名相同

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
 
ENTITY vendor0812 IS
   PORT (
      choose    : IN STD_LOGIC_VECTOR(3 DOWNTO 0);		--商品选择
      coin      : IN STD_LOGIC_VECTOR(2 DOWNTO 0);		--货币
      buy       : IN STD_LOGIC;                       --购买商品
      nrst      : IN STD_LOGIC;                       --低电平复位
      clock     : IN STD_LOGIC;                       --时钟信号
      LED       : OUT STD_LOGIC_VECTOR(3 DOWNTO 0);	--商品指示灯
      warn      : OUT STD_LOGIC;								--提示钱是否足够
      display   : OUT STD_LOGIC_VECTOR(13 DOWNTO 0);	--显示找零
      display1  : OUT STD_LOGIC_VECTOR(13 DOWNTO 0);	--投入总面值
      display2  : OUT STD_LOGIC_VECTOR(13 DOWNTO 0)	--显示商品价格
   );
END vendor0812;

ARCHITECTURE trans OF vendor0812 IS
   COMPONENT vendor_price0812 IS					--元件定义(vendor_price)
      PORT (
         nrst      : IN STD_LOGIC;
         clock     : IN STD_LOGIC;
         coin      : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
         money     : OUT STD_LOGIC_VECTOR(7 DOWNTO 0)
      );
   END COMPONENT;
   
   COMPONENT vendor_needmoney0812 IS				--元件定义(vendor_needmoney)
      PORT (
         nrst      : IN STD_LOGIC;
         clock     : IN STD_LOGIC;
         choose    : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
         money_need : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
         chen      : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
      );
   END COMPONENT;
	
	COMPONENT vendor_buy0812 IS						--元件定义(vendor_buy)
		PORT (
			nrst      : IN STD_LOGIC;
			clock     : IN STD_LOGIC;
			chen      : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
			buy       : IN STD_LOGIC;
			money     : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
			money_need : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
			warn      : OUT STD_LOGIC;
			change    : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
			LED       : OUT STD_LOGIC_VECTOR(3 DOWNTO 0)
		);
	END COMPONENT;
 
   COMPONENT vendor_decoder12 IS					--元件定义(dsi_play)
      PORT (
         nrst      : IN STD_LOGIC;
         clock     : IN STD_LOGIC;
         change    : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
         money     : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
         money_need : IN STD_LOGIC_VECTOR(7 DOWNTO 0);
         display   : OUT STD_LOGIC_VECTOR(13 DOWNTO 0);
         display1  : OUT STD_LOGIC_VECTOR(13 DOWNTO 0);
         display2  : OUT STD_LOGIC_VECTOR(13 DOWNTO 0)
      );
   END COMPONENT;
   
   SIGNAL change         : STD_LOGIC_VECTOR(7 DOWNTO 0);
   SIGNAL money          : STD_LOGIC_VECTOR(7 DOWNTO 0);
   SIGNAL money_need     : STD_LOGIC_VECTOR(7 DOWNTO 0);
   SIGNAL chen           : STD_LOGIC_VECTOR(3 DOWNTO 0);
  
BEGIN
 
   
   
   u2 : vendor_price0812								--元件例化(vendor_price)
      PORT MAP (
         nrst,
         clock,
         coin,
         money
      );
   
   
   u3 : vendor_needmoney0812						--元件例化(vendor_needmoney)
      PORT MAP (
         nrst,
         clock,
         choose,
         money_need,
         chen
      );
   
   
   u4 : vendor_buy0812								--元件例化(vendor_buy)
      PORT MAP (			
         nrst,
         clock,
         chen,
         buy,
         money,
         money_need,
         warn,
         change,
         LED
      );
   
   
   u5 : vendor_decoder12								--元件例化(vendor_play)
      PORT MAP (
         nrst,
         clock,
         change,
         money,
         money_need,
         display,
         display1,
         display2
      );
   
END trans;
